{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Coding/flattenthecurve/src/components/SimComponent/SimComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SimComponent.scss';\nimport { PersonEmoji } from '../../VizHelpers';\nexport default (props => {\n  const numPersons = props.numPersons;\n  const maxPerRow = Math.floor(Math.sqrt(numPersons));\n\n  const testPrint = () => {\n    console.log(props);\n    let emojis = [];\n    [...Array(numPersons).keys()].forEach(i => {\n      emojis.push(Person(\"normal\", \"population\", Math.floor(i / maxPerRow) / maxPerRow * props.width, i % maxPerRow / maxPerRow * props.width));\n    }); // [...Array(1000).keys()].map(i => console.log(i))\n\n    return emojis; // 🛌🛏🤢💀🤒\n  };\n\n  const Person = (state, location, x, y) => {\n    // console.log(x,y);\n    return React.createElement(\"g\", {\n      key: x * numPersons + y,\n      className: \"person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      width: \"20\",\n      height: \"20\",\n      x: x,\n      y: y,\n      fill: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      alignmentBaseline: \"middle\",\n      fill: \"black\",\n      fontSize: \"10\",\n      x: x + 5,\n      y: y + 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, PersonEmoji(state)));\n  };\n\n  return React.createElement(\"svg\", {\n    className: \"SimComponent\",\n    width: props.width,\n    height: props.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, testPrint()));\n}); // SimComponent.propTypes = {}\n// SimComponent.defaultProps = {}","map":{"version":3,"sources":["/Users/yan/Coding/flattenthecurve/src/components/SimComponent/SimComponent.js"],"names":["React","PropTypes","styles","PersonEmoji","props","numPersons","maxPerRow","Math","floor","sqrt","testPrint","console","log","emojis","Array","keys","forEach","i","push","Person","width","state","location","x","y","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAGA,gBAAgBC,KAAD,IAAW;AAE1B,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,IAAL,CAAUJ,UAAV,CAAX,CAAlB;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,QAAIS,MAAM,GAAG,EAAb;AACA,KAAC,GAAGC,KAAK,CAACT,UAAD,CAAL,CAAkBU,IAAlB,EAAJ,EAA8BC,OAA9B,CAAsCC,CAAC,IAAI;AACzCJ,MAAAA,MAAM,CAACK,IAAP,CAAYC,MAAM,CAAC,QAAD,EAAU,YAAV,EAAuBZ,IAAI,CAACC,KAAL,CAAWS,CAAC,GAACX,SAAb,IAAwBA,SAAxB,GAAkCF,KAAK,CAACgB,KAA/D,EAAsEH,CAAC,GAACX,SAAH,GAAcA,SAAd,GAAwBF,KAAK,CAACgB,KAAnG,CAAlB;AACD,KAFD,EAHsB,CAMtB;;AAEA,WAAOP,MAAP,CARsB,CAStB;AACD,GAVD;;AAYA,QAAMM,MAAM,GAAG,CAACE,KAAD,EAAOC,QAAP,EAAgBC,CAAhB,EAAkBC,CAAlB,KAAwB;AACrC;AAEA,WAAO;AAAG,MAAA,GAAG,EAAED,CAAC,GAAClB,UAAF,GAAamB,CAArB;AAAwB,MAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEL;AAAM,MAAA,KAAK,EAAC,IAAZ;AAAiB,MAAA,MAAM,EAAC,IAAxB;AAA6B,MAAA,CAAC,EAAED,CAAhC;AAAmC,MAAA,CAAC,EAAEC,CAAtC;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAGL;AACE,MAAA,UAAU,EAAC,QADb;AAEE,MAAA,iBAAiB,EAAC,QAFpB;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAC,IAJX;AAKE,MAAA,CAAC,EAAED,CAAC,GAAC,CALP;AAME,MAAA,CAAC,EAAEC,CAAC,GAAC,CANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGrB,WAAW,CAACkB,KAAD,CARd,CAHK,CAAP;AAcD,GAjBD;;AAmBA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAEjB,KAAK,CAACgB,KAA3C;AAAkD,IAAA,MAAM,EAAEhB,KAAK,CAACqB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,SAAS,EADZ,CADF,CADF;AAOC,CA3CD,E,CA4CA;AAEA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './SimComponent.scss'\nimport {PersonEmoji} from '../../VizHelpers';\n\n\nexport default (props) => {\n\nconst numPersons = props.numPersons;\nconst maxPerRow = Math.floor(Math.sqrt(numPersons));\n\nconst testPrint = () => {\n  console.log(props);\n  let emojis = [];\n  [...Array(numPersons).keys()].forEach(i => {\n    emojis.push(Person(\"normal\",\"population\",Math.floor(i/maxPerRow)/maxPerRow*props.width,(i%maxPerRow)/maxPerRow*props.width))\n  })\n  // [...Array(1000).keys()].map(i => console.log(i))\n  \n  return emojis;\n  // 🛌🛏🤢💀🤒\n}\n\nconst Person = (state,location,x,y) => {\n  // console.log(x,y);\n  \n  return <g key={x*numPersons+y} className=\"person\">\n    {/* <rect width=\"10\" height=\"110\" style=\"fill:rgb(0,0,0);stroke-width:1;stroke:rgb(0,0,0)\" /> */}\n    <rect width=\"20\" height=\"20\" x={x} y={y} fill=\"none\"/>\n    <text\n      textAnchor=\"middle\"\n      alignmentBaseline=\"middle\"\n      fill=\"black\"\n      fontSize=\"10\"\n      x={x+5}\n      y={y+5}\n    >\n      {PersonEmoji(state)}\n    </text>\n  </g>\n}\n\nreturn (\n  <svg className=\"SimComponent\" width={props.width} height={props.height}>\n    <g>\n      {testPrint()}\n    </g>\n  </svg>\n);\n}\n// SimComponent.propTypes = {}\n\n// SimComponent.defaultProps = {}\n\n\n"]},"metadata":{},"sourceType":"module"}