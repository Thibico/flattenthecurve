{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Coding/flattenthecurve/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.scss';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport _ from 'lodash';\nimport { loadAllData } from './DataLoading';\nimport MainVizComponent from './components/MainVizComponent/MainVizComponent';\nimport { Helmet } from \"react-helmet\";\nimport Switch from \"react-switch\";\nimport { Combobox } from 'react-widgets';\nimport { scaleQuantize, nice } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport * as moment from 'moment';\nimport SimComponent from './components/SimComponent/SimComponent';\nimport { makePerson, getAllNeighbors, newWorld, getNextStateOfWorld } from './Simulate';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleTick = () => {\n      let newWorld = getNextStateOfWorld(this.state.world, this.state.neighborAddresses, this.state.distancing);\n      this.setState({\n        world: newWorld\n      });\n    };\n\n    this.state = { ...this.props,\n      dimensions: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n      currentFilters: [],\n      data: [],\n      timeline: true,\n      revAsCircles: false,\n      distancing: 5,\n      neighborAddresses: getAllNeighbors(32),\n      world: newWorld(32, 1)\n    }; // this.handleTimeLineChange = this.handleTimeLineChange.bind(this)\n    // this.handleFilterYearChange = this.handleFilterYearChange.bind(this)\n    // this.handleBuyerChange = this.handleBuyerChange.bind(this)\n    // this.handleRevAsCirclesChange = this.handleRevAsCirclesChange.bind(this)\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions); // this.getData();\n\n    console.log('mounted');\n  }\n\n  updateDimensions() {\n    this.setState({\n      dimensions: {\n        height: window.innerHeight,\n        width: window.innerWidth\n      }\n    });\n  } // handleTimeLineChange(checked) {\n  //   this.setState({ timeline: checked });\n  // }\n  // handleRevAsCirclesChange(checked) {\n  //   this.setState({ revAsCircles: checked });\n  // }\n  // handleFilterYearChange(year,originalData) {\n  //   const filteredData = year === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Date_of_sale.year() === +year)\n  //   return filteredData\n  // }\n  // handleBuyerChange(buyer,originalData) {\n  //   const filteredData = buyer === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Buyer === buyer)\n  //   return filteredData;\n  // }\n  // handleDestinationChange(destination,originalData) {\n  //   const filteredData = destination === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Destination === destination)\n  //   return filteredData;\n  // }\n  // handlePriceChange(price,originalData) {\n  //   const filteredData = price === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.priceRange === this.state.priceOptions.indexOf(price) - 1)\n  //   return filteredData;\n  // }\n  // handleAllFilters(newFilters) {\n  //   let filteredData = [...this.state.data];\n  //   const replaceOldFilters = this.state.currentFilters.map(fil => \n  //     newFilters.filter === fil.filter \n  //     ? {filter: fil.filter,filterVal: newFilters.filterVal} \n  //     : {filter: fil.filter,filterVal: fil.filterVal} \n  //   );\n  //   console.log(replaceOldFilters);\n  //   const currentFilters = replaceOldFilters.concat(\n  //     replaceOldFilters.map(fil => fil.filter).includes(newFilters.filter) \n  //       ? []\n  //       : [newFilters]\n  //   );\n  //   console.log(filteredData);\n  //   console.log(currentFilters);\n  //   for (let i = 0; i < currentFilters.length; i++) {\n  //     switch (currentFilters[i].filter) {\n  //       case('year'):\n  //         filteredData = this.handleFilterYearChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('buyer'):\n  //         filteredData = this.handleBuyerChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('destination'):\n  //         filteredData = this.handleDestinationChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('price'):\n  //         filteredData = this.handlePriceChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       default: break;\n  //     }\n  //   }\n  //   const [minDate,maxDate] = this.getDateExtent(filteredData);\n  //   // console.log(filteredData);\n  //   // console.log(currentFilters);\n  //   this.setState({ filteredData });\n  //   this.setState({ currentFilters });\n  //   this.setState({ minDate });\n  //   this.setState({ maxDate });\n  // }\n  // getDateExtent = (data) => data.length ? extent([...data.map(d=>d.Date_of_sale),...data.map(d=>d.Payment_receipt_date)]) : [moment(),moment()];\n  // getData() {\n  //   loadAllData()\n  //     .then(data => {\n  //       // set initial data\n  //       const pricesList = data.map(row => row.Price);\n  //       const quantizePrices = scaleQuantize()\n  //         .domain(extent(pricesList)) // pass only the extreme values to a scaleQuantizeâ€™s domain\n  //         .range([...Array(4).keys()]);\n  //       const quantizePricesNice = quantizePrices.copy().nice();\n  //       const thresholds = quantizePricesNice.thresholds();\n  //       const priceRanges = thresholds.map((t,i) => i > 0 \n  //         ? \"$\" + thresholds[i-1] + \" to $\" + t\n  //         : \"$0 to $\" + t )\n  //       priceRanges.push(\">$\" + thresholds[thresholds.length-1]);\n  //       priceRanges.unshift(\"All\");\n  //       console.log(priceRanges);\n  //       var trimmedData = data.map(row => {\n  //         var trimmedRow = {};\n  //         Object.keys(row).forEach(key => trimmedRow[key] = typeof row[key] === 'string' ? row[key].trim(): row[key]);\n  //         trimmedRow['priceRange'] = quantizePricesNice(row['Price']);\n  //         return trimmedRow;\n  //       })\n  //       console.log(trimmedData);\n  //       const [minDate,maxDate] = this.getDateExtent(trimmedData);\n  //       var years = [\"All\", ..._.uniq(trimmedData.map(d => d.Date_of_sale.year()))];\n  //       var buyers = [\"All\", ..._.uniq(trimmedData.map(d => d.Buyer))];\n  //       var destinations = [\"All\", ..._.uniq(trimmedData.map(d => d.Destination))];\n  //       this.setState({ \n  //         data: trimmedData, \n  //         filteredData: data,\n  //         yearOptions: years,\n  //         buyerOptions: buyers,\n  //         destinationOptions: destinations,\n  //         priceOptions: priceRanges,\n  //         maxDate: maxDate,\n  //         minDate: minDate\n  //       });\n  //     })\n  // }\n  // makeAFilterCombo = (filter) => <div className=\"uiWidgetContainer\">\n  //   Filter by {filter}:\n  //   <Combobox\n  //     data={this.state[filter+'Options']}\n  //     defaultValue={\"All\"}\n  //     onChange={value => this.handleAllFilters({filter:filter,filterVal:value}) }\n  //   />\n  // </div>\n\n\n  render() {\n    const isLoading = !!_.isEmpty(this.state.world) ? true : false; // const jane = makePerson({initName:\"Jane\"});\n    // const jacob = makePerson({initName:\"Jacob\"});\n    // console.log(jane.calcInfected({0:[{infected:true}]},1));\n    // console.log(jacob.calcInfected({0:[{infected:true},{infected:true}],1:[{infected:true},{infected:true}]},1));\n\n    for (let tick = 0; tick < 150; tick++) {// world = getNextStateOfWorld(world,neighborAddresses,distancing);\n      // console.log(tick);\n      // console.log(world.infections);\n    }\n\n    return !!isLoading ? null : React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"application\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"meta\", {\n      charSet: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"width=1100,initial-scale=0.3,shrink-to-fit=yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"uiWidgetContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"COVID-19 Simulation\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"vizContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(SimComponent, {\n      width: 700,\n      height: 700,\n      numPersons: 1024,\n      worldState: this.state.world,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yan/Coding/flattenthecurve/src/App.js"],"names":["React","Component","_","loadAllData","MainVizComponent","Helmet","Switch","Combobox","scaleQuantize","nice","extent","moment","SimComponent","makePerson","getAllNeighbors","newWorld","getNextStateOfWorld","App","constructor","handleTick","state","world","neighborAddresses","distancing","setState","props","dimensions","width","window","innerWidth","height","innerHeight","currentFilters","data","timeline","revAsCircles","updateDimensions","bind","componentDidMount","addEventListener","console","log","render","isLoading","isEmpty","tick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport _ from 'lodash'\nimport { loadAllData } from './DataLoading';\nimport MainVizComponent from './components/MainVizComponent/MainVizComponent';\nimport {Helmet} from \"react-helmet\";\nimport Switch from \"react-switch\";\nimport { Combobox } from 'react-widgets';\nimport { scaleQuantize, nice } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport * as moment from 'moment';\nimport SimComponent from './components/SimComponent/SimComponent';\nimport {makePerson,getAllNeighbors,newWorld,getNextStateOfWorld} from './Simulate';\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      ...this.props,\n      dimensions: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n      currentFilters: [],\n      data: [],\n      timeline: true,\n      revAsCircles: false,\n      distancing: 5,\n      neighborAddresses: getAllNeighbors(32),\n      world: newWorld(32,1)\n    };\n    // this.handleTimeLineChange = this.handleTimeLineChange.bind(this)\n    // this.handleFilterYearChange = this.handleFilterYearChange.bind(this)\n    // this.handleBuyerChange = this.handleBuyerChange.bind(this)\n    // this.handleRevAsCirclesChange = this.handleRevAsCirclesChange.bind(this)\n    this.updateDimensions = this.updateDimensions.bind(this)\n    this.handleTick = this.handleTick.bind(this)\n    \n  }\n\n    \n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    // this.getData();\n    console.log('mounted')\n  }\n\n  updateDimensions() {\n    this.setState({\n      dimensions: {\n\t\t\t\theight: window.innerHeight, \n\t\t\t\twidth: window.innerWidth\n\t\t\t}\n    });\n  }\n\n  // handleTimeLineChange(checked) {\n  //   this.setState({ timeline: checked });\n  // }\n\n  // handleRevAsCirclesChange(checked) {\n  //   this.setState({ revAsCircles: checked });\n  // }\n  \n  // handleFilterYearChange(year,originalData) {\n  //   const filteredData = year === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Date_of_sale.year() === +year)\n  //   return filteredData\n  // }\n\n  // handleBuyerChange(buyer,originalData) {\n  //   const filteredData = buyer === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Buyer === buyer)\n  //   return filteredData;\n  // }\n\n  // handleDestinationChange(destination,originalData) {\n  //   const filteredData = destination === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.Destination === destination)\n  //   return filteredData;\n  // }\n\n  // handlePriceChange(price,originalData) {\n  //   const filteredData = price === \"All\"\n  //     ? originalData\n  //     : originalData.filter(d => d.priceRange === this.state.priceOptions.indexOf(price) - 1)\n  //   return filteredData;\n  // }\n\n  // handleAllFilters(newFilters) {\n  //   let filteredData = [...this.state.data];\n  //   const replaceOldFilters = this.state.currentFilters.map(fil => \n  //     newFilters.filter === fil.filter \n  //     ? {filter: fil.filter,filterVal: newFilters.filterVal} \n  //     : {filter: fil.filter,filterVal: fil.filterVal} \n  //   );\n  //   console.log(replaceOldFilters);\n  //   const currentFilters = replaceOldFilters.concat(\n  //     replaceOldFilters.map(fil => fil.filter).includes(newFilters.filter) \n  //       ? []\n  //       : [newFilters]\n  //   );\n  //   console.log(filteredData);\n  //   console.log(currentFilters);\n  //   for (let i = 0; i < currentFilters.length; i++) {\n  //     switch (currentFilters[i].filter) {\n  //       case('year'):\n  //         filteredData = this.handleFilterYearChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('buyer'):\n  //         filteredData = this.handleBuyerChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('destination'):\n  //         filteredData = this.handleDestinationChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       case('price'):\n  //         filteredData = this.handlePriceChange(currentFilters[i].filterVal,filteredData);\n  //         break;\n  //       default: break;\n  //     }\n  //   }\n  //   const [minDate,maxDate] = this.getDateExtent(filteredData);\n\n\n  //   // console.log(filteredData);\n  //   // console.log(currentFilters);\n  //   this.setState({ filteredData });\n  //   this.setState({ currentFilters });\n  //   this.setState({ minDate });\n  //   this.setState({ maxDate });\n  // }\n\n  // getDateExtent = (data) => data.length ? extent([...data.map(d=>d.Date_of_sale),...data.map(d=>d.Payment_receipt_date)]) : [moment(),moment()];\n\n  // getData() {\n  //   loadAllData()\n  //     .then(data => {\n  //       // set initial data\n  //       const pricesList = data.map(row => row.Price);\n  //       const quantizePrices = scaleQuantize()\n  //         .domain(extent(pricesList)) // pass only the extreme values to a scaleQuantizeâ€™s domain\n  //         .range([...Array(4).keys()]);\n  //       const quantizePricesNice = quantizePrices.copy().nice();\n        \n  //       const thresholds = quantizePricesNice.thresholds();\n  //       const priceRanges = thresholds.map((t,i) => i > 0 \n  //         ? \"$\" + thresholds[i-1] + \" to $\" + t\n  //         : \"$0 to $\" + t )\n  //       priceRanges.push(\">$\" + thresholds[thresholds.length-1]);\n  //       priceRanges.unshift(\"All\");\n  //       console.log(priceRanges);\n\n  //       var trimmedData = data.map(row => {\n  //         var trimmedRow = {};\n  //         Object.keys(row).forEach(key => trimmedRow[key] = typeof row[key] === 'string' ? row[key].trim(): row[key]);\n  //         trimmedRow['priceRange'] = quantizePricesNice(row['Price']);\n  //         return trimmedRow;\n  //       })\n  //       console.log(trimmedData);\n        \n  //       const [minDate,maxDate] = this.getDateExtent(trimmedData);\n\n        \n  //       var years = [\"All\", ..._.uniq(trimmedData.map(d => d.Date_of_sale.year()))];\n  //       var buyers = [\"All\", ..._.uniq(trimmedData.map(d => d.Buyer))];\n  //       var destinations = [\"All\", ..._.uniq(trimmedData.map(d => d.Destination))];\n  //       this.setState({ \n  //         data: trimmedData, \n  //         filteredData: data,\n  //         yearOptions: years,\n  //         buyerOptions: buyers,\n  //         destinationOptions: destinations,\n  //         priceOptions: priceRanges,\n  //         maxDate: maxDate,\n  //         minDate: minDate\n  //       });\n  //     })\n  // }\n\n  // makeAFilterCombo = (filter) => <div className=\"uiWidgetContainer\">\n  //   Filter by {filter}:\n  //   <Combobox\n  //     data={this.state[filter+'Options']}\n  //     defaultValue={\"All\"}\n  //     onChange={value => this.handleAllFilters({filter:filter,filterVal:value}) }\n  //   />\n  // </div>\n\n  handleTick = () => {\n    let newWorld = getNextStateOfWorld(this.state.world,this.state.neighborAddresses,this.state.distancing);\n    this.setState({ world: newWorld });\n  }\n\n\n  render() {\n    const isLoading = !!(_.isEmpty(this.state.world)) ? true : false;\n    // const jane = makePerson({initName:\"Jane\"});\n    // const jacob = makePerson({initName:\"Jacob\"});\n    // console.log(jane.calcInfected({0:[{infected:true}]},1));\n    // console.log(jacob.calcInfected({0:[{infected:true},{infected:true}],1:[{infected:true},{infected:true}]},1));\n    for (let tick = 0; tick < 150; tick++) {\n      // world = getNextStateOfWorld(world,neighborAddresses,distancing);\n      // console.log(tick);\n      // console.log(world.infections);\n    }\n\n    return (\n\n      \n      !!isLoading\n      ? null\n      : <div className=\"App\">\n\n        <header>\n        <div className=\"application\">\n            <Helmet>\n              <meta charSet=\"utf-8\" />\n              <meta name=\"viewport\" content=\"width=1100,initial-scale=0.3,shrink-to-fit=yes\" />\n            </Helmet>\n        </div>\n        </header>\n\n        {/* <div className=\"uiWidgetContainer\">\n          <label>\n            <span>Revenue as Circles</span>\n            <br/>\n            <Switch onChange={this.handleRevAsCirclesChange} checked={this.state.revAsCircles} />\n          </label>\n        </div> */}\n        <div className=\"uiWidgetContainer\">\n          <label>\n            <span>COVID-19 Simulation</span>\n            <br/>\n            {/* <button onClick={this.handleTick()}>Next Day</button> */}\n            {/* <Switch onChange={this.handleTimeLineChange} checked={this.state.timeline} /> */}\n          </label>\n        </div>\n        {/* {this.makeAFilterCombo('buyer')}\n        {this.makeAFilterCombo('destination')}\n        {this.makeAFilterCombo('year')}\n        {this.makeAFilterCombo('price')} */}\n        <br/>\n        <br/>\n        \n        \n        \n\n        <div className=\"vizContainer\">\n        <SimComponent width={700} height={700} numPersons={1024} worldState={this.state.world}></SimComponent>\n\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}