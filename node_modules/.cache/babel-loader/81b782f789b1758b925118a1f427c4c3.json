{"ast":null,"code":"import { csv, json } from 'd3-fetch';\nimport { nest } from 'd3-collection';\nimport * as moment from 'moment';\nimport timorAll from \"./data/gnpc_commodity_exports.csv\";\nexport const loadAllData = () => {\n  const promises = [];\n  promises.push(csv(timorAll));\n  return Promise.all(promises).then(function (values) {\n    console.log(values);\n    const result = [];\n    values[0].forEach(d => {\n      d.Date_of_sale = moment(d.Date_of_sale, \"YYYY-MM-DD\");\n      d.Payment_receipt_date = moment(d.Payment_receipt_date, \"YYYY-MM-DD\");\n      result.push(d);\n    });\n    return result;\n  });\n};","map":{"version":3,"sources":["/Users/yan/Coding/flattenthecurve/src/DataLoading.js"],"names":["csv","json","nest","moment","timorAll","loadAllData","promises","push","Promise","all","then","values","console","log","result","forEach","d","Date_of_sale","Payment_receipt_date"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,UAA1B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,OAAOC,QAAP,MAAqB,mCAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAE/B,QAAMC,QAAQ,GAAG,EAAjB;AAEAA,EAAAA,QAAQ,CAACC,IAAT,CACEP,GAAG,CAACI,QAAD,CADL;AAIA,SAAOI,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBI,IAAtB,CAA2B,UAAUC,MAAV,EAAkB;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,UAAMG,MAAM,GAAG,EAAf;AACAH,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUI,OAAV,CAAkBC,CAAC,IAAI;AACxBA,MAAAA,CAAC,CAACC,YAAF,GAAiBd,MAAM,CAACa,CAAC,CAACC,YAAH,EAAiB,YAAjB,CAAvB;AACAD,MAAAA,CAAC,CAACE,oBAAF,GAAyBf,MAAM,CAACa,CAAC,CAACE,oBAAH,EAAyB,YAAzB,CAA/B;AACGJ,MAAAA,MAAM,CAACP,IAAP,CAAYS,CAAZ;AACD,KAJD;AAMA,WAAOF,MAAP;AACD,GAXM,CAAP;AAYD,CApBM","sourcesContent":["import { csv, json } from 'd3-fetch';\nimport { nest } from 'd3-collection';\nimport * as moment from 'moment';\n\nimport timorAll from \"./data/gnpc_commodity_exports.csv\";\n\nexport const loadAllData = () => {\n  \n  const promises = [];\n\n  promises.push(\n    csv(timorAll)\n  )\n\n  return Promise.all(promises).then(function (values) {\n    console.log(values);\n\n    const result = [];\n    values[0].forEach(d => {\n\t\t\td.Date_of_sale = moment(d.Date_of_sale, \"YYYY-MM-DD\")\n\t\t\td.Payment_receipt_date = moment(d.Payment_receipt_date, \"YYYY-MM-DD\")\n      result.push(d);  \n    })\n\n    return result;\n  })\n}"]},"metadata":{},"sourceType":"module"}