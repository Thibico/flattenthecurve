{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Coding/flattenthecurve/src/components/SimComponent/SimComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SimComponent.scss';\nimport { PersonEmoji } from '../../VizHelpers';\nexport default (props => {\n  const testPrint = () => {\n    console.log(props);\n    let emojis = \"\";\n\n    for (let i = 0; i < 1000; i++) {\n      emojis.push(Person(\"normal\", \"population\", Math.floor(i / 30), i % 30));\n    }\n\n    return emojis; // 🛌🛏🤢💀🤒\n  };\n\n  const Person = ({\n    state,\n    location,\n    x,\n    y\n  }) => {\n    return React.createElement(\"g\", {\n      key: x * 1000 + y,\n      className: \"arc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      width: \"10\",\n      height: \"110\",\n      style: \"fill:rgb(0,0,0);stroke-width:1;stroke:rgb(0,0,0)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      alignmentBaseline: \"middle\",\n      fill: \"black\",\n      fontSize: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, PersonEmoji(state)));\n  };\n\n  return React.createElement(\"svg\", {\n    className: \"SimComponent\",\n    width: props.width,\n    height: props.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, testPrint()));\n}); // SimComponent.propTypes = {}\n// SimComponent.defaultProps = {}","map":{"version":3,"sources":["/Users/yan/Coding/flattenthecurve/src/components/SimComponent/SimComponent.js"],"names":["React","PropTypes","styles","PersonEmoji","props","testPrint","console","log","emojis","i","push","Person","Math","floor","state","location","x","y","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAGA,gBAAgBC,KAAD,IAAW;AAG1B,QAAMC,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAII,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,IAAhB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBD,MAAAA,MAAM,CAACE,IAAP,CAAYC,MAAM,CAAC,QAAD,EAAU,YAAV,EAAuBC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAC,EAAb,CAAvB,EAAwCA,CAAC,GAAC,EAA1C,CAAlB;AACD;;AACD,WAAOD,MAAP,CANsB,CAOtB;AACD,GARD;;AAUA,QAAMG,MAAM,GAAG,CAAC;AAACG,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA,CAAhB;AAAkBC,IAAAA;AAAlB,GAAD,KAA0B;AACvC,WAAO;AAAG,MAAA,GAAG,EAAED,CAAC,GAAC,IAAF,GAAOC,CAAf;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAM,MAAA,KAAK,EAAC,IAAZ;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAA8B,MAAA,KAAK,EAAC,kDAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL;AACE,MAAA,UAAU,EAAC,QADb;AAEE,MAAA,iBAAiB,EAAC,QAFpB;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAC,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGd,WAAW,CAACW,KAAD,CANd,CAFK,CAAP;AAWD,GAZD;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAEV,KAAK,CAACc,KAA3C;AAAkD,IAAA,MAAM,EAAEd,KAAK,CAACe,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,EADZ,CADF,CADF;AAOC,CAlCD,E,CAmCA;AAEA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './SimComponent.scss'\nimport {PersonEmoji} from '../../VizHelpers';\n\n\nexport default (props) => {\n\n\nconst testPrint = () => {\n  console.log(props);\n  let emojis = \"\"\n  for (let i=0; i<1000; i++) {\n    emojis.push(Person(\"normal\",\"population\",Math.floor(i/30),i%30))\n  }\n  return emojis;\n  // 🛌🛏🤢💀🤒\n}\n\nconst Person = ({state,location,x,y}) => {\n  return <g key={x*1000+y} className=\"arc\">\n    <rect width=\"10\" height=\"110\" style=\"fill:rgb(0,0,0);stroke-width:1;stroke:rgb(0,0,0)\" />\n    <text\n      textAnchor=\"middle\"\n      alignmentBaseline=\"middle\"\n      fill=\"black\"\n      fontSize=\"10\"\n    >\n      {PersonEmoji(state)}\n    </text>\n  </g>\n}\n\nreturn (\n  <svg className=\"SimComponent\" width={props.width} height={props.height}>\n    <g>\n      {testPrint()}\n    </g>\n  </svg>\n);\n}\n// SimComponent.propTypes = {}\n\n// SimComponent.defaultProps = {}\n\n\n"]},"metadata":{},"sourceType":"module"}